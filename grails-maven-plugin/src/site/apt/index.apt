~~
~~  Copyright 2007 the original author or authors.
~~  
~~  Licensed under the Apache License, Version 2.0 (the "License");
~~  you may not use this file except in compliance with the License.
~~  You may obtain a copy of the License at
~~  
~~  http://www.apache.org/licenses/LICENSE-2.0
~~  
~~  Unless required by applicable law or agreed to in writing, software
~~  distributed under the License is distributed on an "AS IS" BASIS,
~~  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
~~  See the License for the specific language governing permissions and
~~  limitations under the License. 
~~

    ------
    Introduction
    ------
    Arnaud HERITIER
    ------
    July 12, 2007 

What is the Grails plugin for Maven ?

  The Grails plugin for maven is a set of goals to easily develop a Grails application using maven 2. 
  
* Goals Overview

** Enhanced Grails services for maven 2
  
  * <<{{{./create-pom-mojo.html}grails:create-pom}}>> to create a maven2 pom for an existing Grails project.
  
  * A <<grails-app>> packaging defining 
  
    * a customized <<default lifecycle>> with the following services :
  
      * runs grails unit-tests and integration-tests in <<test phase>>
    
      * runs (if grails.webtest.enable = true) grails web-tests in <<integration-test phase>>
    
      * copies projects dependencies of type jar which have not a provided or system scope in the lib directory.
  
      * creates a WAR archive using grails which can be installed and deployed by maven.
      
    * a customized <<clean lifecycle>> which call the clean target of grails and delete the libraries found 
    in the lib directory (populated in the package phase of the default lifecycle) 

** Standard Grails services

  Those goals don't require a POM to be executed. They are just wrappers around Grails commands.
  
  * <<{{{./create-app-mojo.html}grails:create-app}}>> to create a Grails project, including the necessary 
  directory structure, and commons files.
  
  * <<{{{./create-domain-class-mojo.html}grails:create-domain-class}}>> to create a new domain class.
  
  * <<{{{./create-controller-mojo.html}grails:create-controller}}>> to create a new controller.
  
  * <<{{{./create-service-mojo.html}grails:create-service}}>> to create a new service class.
  
  * <<{{{./create-taglib-mojo.html}grails:create-taglib}}>> to create a new taglib.
  
  * <<{{{./create-script-mojo.html}grails:create-script}}>> to creates a Grails Gant Script.
  
  * <<{{{./create-unit-test-mojo.html}grails:create-unit-test}}>> to create a new Grails unit test.
  
  * <<{{{./create-integration-test-mojo.html}grails:create-integration-test}}>> to create a new Grails 
  integration test which loads the whole Grails environment when run.
  
  * <<{{{./create-web-test-mojo.html}grails:create-web-test}}>> to create a skeleton of a Canoo 
  WebTest (functional test).
  
  * <<{{{./generate-all-mojo.html}grails:generate-all}}>> to generate a CRUD interface 
  (controller + views) for a domain class.

  * <<{{{./generate-controller-mojo.html}grails:generate-controller}}>> to generate a 
  CRUD controller for a specified domain class.

  * <<{{{./generate-views-mojo.html}grails:generate-views}}>> to generate the CRUD 
  views for a specified domain class.

  * <<{{{./install-templates-mojo.html}grails:install-templates}}>> to install 
  the artifact and scaffolding templates.

  * <<{{{./clean-mojo.html}grails:clean}}>> to clean a Grails project.
  
  * <<{{{./test-app-mojo.html}grails:test-app}}>> to run unit tests and integration tests..
  
  * <<{{{./run-webtests-mojo.html}grails:run-webtests}}>> to run all of the Web 
  tests against a Grails application..
  
  * <<{{{./package-mojo.html}grails:package}}>> to package the Grails application into the web-app folder for running.
  
  * <<{{{./war-mojo.html}grails:war}}>> to create a WAR archive.
  
  * <<{{{./run-app-mojo.html}grails:run-app}}>> to run the Grails application in Jetty.
  
  * <<{{{./run-app-mojo.html}grails:run-app-https}}>> to run the Grails application in Jetty with HTTPS listener.

* Usage

  Instructions on how to use the Grails plugin can be found {{{./usage.html}here}}.

* Examples

  To provide you with better understanding of some usages of the Grails plugin,
  you can take a look into the following examples:

  * {{{./examples/create-a-grails-app.html}How to start a grails project.}}

  * {{{./examples/mavenize-a-grails-app.html}How to mavenize an existing grails project.}}
  
  * {{{./examples/setup-your-IDE.html}How to setup your IDE.}}