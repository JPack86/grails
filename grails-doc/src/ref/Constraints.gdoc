h1. Constraints Usage

Constraints provide Grails with a declarative DSL for defining validation rules, schema generation and CRUD generation meta data. An example of a set of constraints applied to a domain class are as follows:

{code:java}
class User {
    ...

    static constraints = {
        login(size:5..15, blank:false, unique:true)
        password(size:5..15, blank:false)
        email(email:true, blank:false)
        age(min:18, nullable:false)
    }
}
{code}

Refer to the user guide topic on [Constraints|guide:constraints] for more information.

h1. Global Constraints

You can apply constraints globally inside @grails-app/conf/Config.groovy@ as follows:

{code}
grails.gorm.default.constraints = {
   '*'(nullable:true, size:1..20)
}
{code}

The wildcard signifies that the constraints apply to all properties. You can also define shared constraints:

{code}
grails.gorm.default.constraints = {
   myShared(nullable:true, size:1..20)
}
{code}

That can be reused in your class:

{code:java}
class User {
    ...

    static constraints = {
        login(shared:"myShared")
    }
}
{code}
