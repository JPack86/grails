To create a filter create a class that ends with the convention @Filters@ in the @grails-app/conf@ directory. Within this class define a code block called @filters@ that contains the filter definitions:

{code:java}
class ExampleFilters {
   def filters = {
        // your filters here
   }
}
{code}

Each filter you define within the @filters@ block has a name and a scope. The name is the method name and the scope is defined using named arguments. For example if you need to define a filter that applies to all controllers and all actions you can use wildcards:

{code:java}
sampleFilter(controller:'*', action:'*') {
  // interceptor definitions
}
{code}

The scope of the filter can be one of the following things:

* A controller and/or action name pairing with optional wildcards
* A URI

Some examples of filters include:

* All controllers and actions
{code:java}
all(controller:'*', action:'*') {

}
{code}
* Only for the @BookController@
{code:java}
justBook(controller:'book', action:'*') {

}
{code}
* Applied to a URI space
{code:java}
someURIs(uri:'/book/*') {

}
{code}
* Applied to all URIs
{code:java}
allURIs(uri:'/*') {

}
{code}

In addition, the order in which you define the filters dictates the order in which they are executed.