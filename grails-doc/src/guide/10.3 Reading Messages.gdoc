h4. Reading Messages in the View

The most common place that you need messages is inside the view. To read messages from the view just use the [message|tags] tag:

{code:xml}
<g:message code="my.localized.content" />
{code}

As long as you have a key in your @messages.properties@ (with appropriate locale suffix) such as the one below then Grails will look-up the message:

{code:java}
my.localized.content=Hola, Me llamo John. Hoy es domingo.
{code}

Note that sometimes you may need to pass arguments to the message. This is also possible with the @message@ tag:

{code:xml}
<g:message code="my.localized.content" args="${ ['Juan', 'lunes'] }" />
{code}

And then use positional parameters in the message:

{code:java}
my.localized.content=Hola, Me llamo {0}. Hoy es {1}.
{code}

h4. Reading Messages in Controllers and Tag Libraries

Since you can invoke tags as methods from controllers it is also trivial to read messages within in a controller:

{code:java}
def show = {
	def msg = message(code:"my.localized.content", args:['Juan', 'lunes'])
}
{code}

The same technique can be used on [tag libraries|guide:taglibs], but note if your tag library has a different [namespace|guide:namespaces] then you will need to @g.@ prefix:

{code:java}
def myTag = { attrs, body ->
	def msg = g.message(code:"my.localized.content", args:['Juan', 'lunes'])
}
{code}