One major different between GSP tags and other tagging technologies is that GSP tags can be called as either regular tags or as method calls from either [controllers|guide:controllers], [tag libraries|guide:taglibs] or GSP views.

h4. Tags as method calls from GSPs

When called as methods tags return their results as a String instead of writing directly to the response. So for example the [createLinkTo|tags] tag can equally be called as a method:

{code:xml}
Static Resource: ${createLinkTo(dir:"images", file:"logo.jpg")}
{code}

This is particularly useful when you need to use a tag within an attribute:

{code:xml}
<img src="${createLinkTo(dir:'images', file:'logo.jpg')}" />
{code}

In view technologies that don't support this feature you have to nest tags within tags, which becomes messy quickly and often has an adverse effect of WYSWIG tools such as Dreamweaver that attempt to render the mark-up as it is not well-formed:

{code:xml}
<img src="<g:createLinkTo dir="images" file="logo.jpg" />" />
{code}

h4. Tags as method calls from Controllers and Tag Libraries

You can also invoke tags from controllers and tag libraries. Tags within the default @g:@ [namespace|guide:namespaces] can be invoked without the prefix and a String result is returned:

{code:java}
def imageLocation = createLinkTo(dir:"images", file:"logo.jpg")
{code}

However, you can also prefix the namespace to avoid naming conflicts:

{code:java}
def imageLocation = g.createLinkTo(dir:"images", file:"logo.jpg")
{code}

If you have a [custom namespace|guide:namespaces] you can use that prefix instead (Example using the [FCK Editor plugin|http://grails.org/FCK+editor+plugin]):

{code:java}
def editor = fck.editor()
{code}



