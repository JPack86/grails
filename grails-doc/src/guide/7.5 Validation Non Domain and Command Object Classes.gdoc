[Domain classes|guide:domainClasses] and [command objects|guide:commandObjects] support validation by default.  Other classes may be made validateable by defining the static constraints property in the class (as described above) and then telling the framework about them.  It is important that the application register the validateable classes with the framework.  Simply defining the constraints property is not sufficient.

h4. The Validateable Annotation

Any class which defines the static constraints property and is marked with the @Validateable interface will made validateable by the framework.  Consider this example:

{code:java}
// src/groovy/com/mycompany/myapp/User.groovy
package com.mycompany.myapp

import org.codehaus.groovy.grails.validation.Validateable

@Validateable
class User {
    ...

    static constraints = {
        login(size:5..15, blank:false, unique:true)
        password(size:5..15, blank:false)
        email(email:true, blank:false)
        age(min:18, nullable:false)
    }
}
{code}

By default the framework will search all classes for the @Validateable annotation.  You may instruct the framework to only search in certain packages by assigning a list of Strings to the grails.validateable.packages property in Config.groovy.

{code:java}
// grails-app/conf/Config.groovy

...

grails.validateable.packages = ['com.mycompany.dto', 'com.mycompany.util']

...
{code}

If the grails.validateable.packages property is set then the framework will only search those packages (and child packages of those) for classes marked with @Validateable.

h4. Registering Validateable Classes

If a class is not marked with @Validateable, it may still be made validateable by the framework.  The steps required to do this are to define the static constraints property in the class (as described above) and then telling the framework about the class by assigning a value to the grails.validateable.classes property in Config.groovy.


{code:java}
// grails-app/conf/Config.groovy

...

grails.validateable.classes = [com.mycompany.myapp.User, com.mycompany.dto.Account]

...
{code}

